package com.example.listviewshowsql;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import android.app.Activity;
import android.content.ContentValues;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ListView;
import android.widget.SimpleAdapter;
import android.widget.TextView;
import android.widget.Toast;

import com.example.listviewshowsqlsimpleadapter.R;

/*这个程序实现了sqlite数据库的增删改查，并且每一次查询都会使用ListView显示数据库里面的内容*/
public class MainActivity extends Activity {

	private MySQLOpenHelper mySQLOpenHelper;
	private ListView lv_info;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		lv_info = (ListView) findViewById(R.id.lv_info);

		mySQLOpenHelper = new MySQLOpenHelper(getApplicationContext());
	}

	public void click_add(View v) {
		SQLiteDatabase db = mySQLOpenHelper.getWritableDatabase();
		ContentValues contentValues = new ContentValues();
		long insert;
		// 增加条目
		contentValues.put("_id", 1);
		contentValues.put("name", "Bob");
		contentValues.put("phone", "1388888");
		insert = db.insert("info", null, contentValues);
		contentValues.put("_id", 2);
		contentValues.put("name", "Mike");
		contentValues.put("phone", "13111111");
		insert = db.insert("info", null, contentValues);
		contentValues.put("_id", 3);
		contentValues.put("name", "Sarah");
		contentValues.put("phone", "1399999");
		insert = db.insert("info", null, contentValues);
		contentValues.put("_id", 4);
		contentValues.put("name", "John");
		contentValues.put("phone", "13333333");

		insert = db.insert("info", null, contentValues);
		if (insert > 0) {
			Toast.makeText(getApplicationContext(), "insert success",
					Toast.LENGTH_LONG).show();
		} else {
			Toast.makeText(getApplicationContext(), "insert fail",
					Toast.LENGTH_LONG).show();
		}
		db.close();
	}

	public void click_delete(View v) {
		SQLiteDatabase db = mySQLOpenHelper.getWritableDatabase();
		int row = db.delete("info", "_id=?", new String[] { "2" });
		Toast.makeText(getApplicationContext(), "delete" + row + "row",
				Toast.LENGTH_LONG).show();
		db.close();
	}

	public void click_update(View v) {
		SQLiteDatabase db = mySQLOpenHelper.getWritableDatabase();
		ContentValues contentValues = new ContentValues();
		contentValues.put("phone", "110");
		db.update("info", contentValues, "_id=?", new String[] { "1" });
		db.close();
	}

	public void click_query(View v) {
		SQLiteDatabase db = mySQLOpenHelper.getWritableDatabase();
		ArrayList<Map<String, String>> informations = new ArrayList<Map<String, String>>();
		Map<String, String> map = new HashMap<String, String>();
		Cursor cursor = db.query("info", null, null, null, null, null, null);
		if (cursor != null && cursor.getCount() > 0) {
			while (cursor.moveToNext()) {
				String id;
				String name;
				String phone;
				// 可以优化成获取列的名字，由名字得到列的index
				id = cursor.getString(cursor.getColumnIndex("_id"));
				name = cursor.getString(cursor.getColumnIndex("name"));
				phone = cursor.getString(cursor.getColumnIndex("phone"));

				System.out.println("id" + id + "   " + "name" + name + "   "
						+ "phone" + phone);

				map.put("id", id);
				map.put("name", name);
				map.put("phone", phone);
				informations.add(map);
			}
		}
		db.close();
		SimpleAdapter simpleAdapter = new SimpleAdapter(
				getApplicationContext(), informations, R.layout.info_item,
				new String[] { "id", "name", "phone" }, new int[] { R.id.tv_id,
						R.id.tv_name, R.id.tv_phone });
		lv_info.setAdapter(simpleAdapter);
	}

	

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}
}
